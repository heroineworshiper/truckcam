Attempts to make the robot mounted camera track subjects.


Copyright (C) 2021-2022 Adam Williams <broadcast at earthling dot net>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

--------------------------------------------------------------------------------

Neural network training bits:

coco_to_tflow.py: extract training data from the COCO dataset for tensorflow

coco_to_pytorch.py: extract training data from the COCO dataset for pytorch/YOLO

label.py: Use YOLO to automatically label images & generate training sets for tensorflow.

model_maker.py: train an efficientdet_lite object detector for tensorflow


--------------------------------------------------------------------------------

Hardware:


cam_bearing.FCStd
    obsolete bearing for motorized panning
    print bearing inner
    print bearing outer
     - doesn't require support
    must print with
        4 * "inner shroud slice"
         - TODO: make hole for tube & make base wider to compensate for lost material
         - TODO remove alignment ring to make it easier to print
        "outer shroud" + "bolt loop"
    
    print right angle coupling with right hole pattern to create a right angle
    requires ironing

cam_motor.FCStd:
    brushless servo as a stepper motor for panning

enclosure.FCStd: enclosure for a raspberri PI 4B & servo driver

generalplus.FCStd: adapt a keychain cam to a CF rod

truckcam.FCMacro
libisogrid.py: isogrid script for the enclosure


--------------------------------------------------------------------------------

Lion tracking:

face_detect2.py: face tracking test program which came from opencv-4.x/samples/dnn/face_detect.py

face_recognizer_fast.onnx: model for face recognition using opencv DNN
yunet.onnx: model for face detection using opencv DNN

efficientlion0.tflite.1000.300epoch: general model for tracking a whole body
    Trained using the prelabeled COCO 2017 dataset.

efficientlion0.yolo.300.tflite: model for tracking running athletes
    Trained using footage from the truck mounted webcam.
    Labeled using YOLO.

ffmpeg-kit: obsolete library used by Android

tensortrack.c:
trackerserver.c: track 1-2 people with a raspberry PI 4B
    Tracks pan & tilt.
    Uses whole body tracking with tensorflow
    This didn't work.  Countreps/tracker continues to be the preferred method.

    A DSLR on a pan/tilt mount is driven by a servo board from
    countreps.  Video from HDMI goes to the tracker program.

TensorTrack: Android user interface for tensortrack

cam_server.c:
truckcam.c: Track faces with a raspberry PI 4B
    Least effective method of tracking.
    Uses the opencv DNN backend

truckflow.c: Track a running human with a raspberry pi 4B
    Pan direction only.
    Uses whole body tracking with tensorflow

truckcam_trt.c: Track using face recognition & whole body.
    Uses a jetson nano.
    Pan direction only.
    Requires https://github.com/heroineworshiper/face_recognition_tensorRT.git
    1 directory higher

    A webcam is mounted on a lower part of the camera pole while the mane
    gopro goes on top.  The webcam captures video for tracking & feeds it to
    a confuser.  The confuser runs the tracking software & sends
    commands over SPI to the truck's camera board.  SPI goes from SPI0_MOSI
    to SWDIO on the cam board, SPI0_CLK goes to SWCLK on the cam board.


TruckCam: Android user interface for truckflow
    - be sure to copy settings.txt to /sdcard/truckcam/ & enable storage permissions
    - different versions of Android require disabling data to 
        access wifi without internet

settings.txt: settings file for the app






