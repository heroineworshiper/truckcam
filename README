Attempts to make the robot mounted camera track subjects.


Copyright (C) 2021-2022 Adam Williams <broadcast at earthling dot net>

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

--------------------------------------------------------------------------------


A webcam is mounted on a lower part of the camera pole while the mane
gopro goes on top.  The webcam captures video for tracking & feeds it to
a raspberry pi.  The raspberry pi runs the tracking firmware & sends
commands over SPI to the truck's camera board.  SPI goes from SPI0_MOSI
to SWDIO on the cam board, SPI0_CLK goes to SWCLK on the cam board.

--------------------------------------------------------------------------------

Neural network training bits:

coco_to_tflow.py: extract training data from the COCO dataset for tensorflow

coco_to_pytorch.py: extract training data from the COCO dataset for pytorch/YOLO

label.py: Use YOLO to automatically label images & generate training sets for tensorflow.

model_maker.py: train an efficientdet_lite object detector for tensorflow


--------------------------------------------------------------------------------

Hardware:

enclosure.FCStd: enclosure for a raspberri PI 4B & servo driver

generalplus.FCStd: adapt a keychain cam to a CF rod

truckcam.FCMacro
libisogrid.py: isogrid script for the enclosure


--------------------------------------------------------------------------------

Lion tracking:

face_detect2.py: face tracking test program which came from opencv-4.x/samples/dnn/face_detect.py

face_recognizer_fast.onnx: model for face recognition using opencv DNN
yunet.onnx: model for face detection using opencv DNN

efficientlion0.tflite.1000.300epoch: model for whole body tracking
    Trained using the COCO 2017 dataset.

efficientlion0.yolo.100.tflite: best model for whole body tracking
    Trained using footage from the truck mounted webcam.

ffmpeg-kit: library used by Android

cam_server.c:
truckcam.c: face tracker firmware for a raspberry PI 4B
    Uses the opencv DNN backend

truckflow.c: whole body tracker for raspberry pi 4B
    Uses the tensorflow backend

TruckCam: Android user interface for tracker firmware
    - be sure to copy settings.txt to /sdcard/truckcam/ & enable storage permissions
    - different versions of Android require disabling data to 
        access wifi without internet

settings.txt: settings file for the app






